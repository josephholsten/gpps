require 'rake'
require 'spec/rake/spectask'
require 'rake/rdoctask'

task :default => [:examples, :rdoc]

# Deliverables
task :deliverable1 => :knowledge_representation
task :deliverable2 => :search_operators

desc "Run all examples"
Spec::Rake::SpecTask.new('examples') do |t|
  t.spec_files = FileList['examples/**/*.rb']
end

desc 'Generate documentation'
Rake::RDocTask.new do |rdoc|
  rdoc.rdoc_dir = "doc"
  rdoc.rdoc_files.include('README', 'src/**/*.rb')
  rdoc.options << "--quiet"
end

desc 'Remove all generated files'
task :clean do
  `rm -rf doc`
end

task :knowledge_representation do
  require 'src/population'
  p = Population.new()
  p.fitnessAgainst(lambda {|params| ((params[0] ** 2)/2) + 1})
  
  a = p.fitnessArray().sort
  a.each { |f| print "Fitness(#{f})\n" }
  print "Max Fitness(#{a.max})\n"
  print "Min Fitness(#{a.min})\n"
  print "Avg Fitness(#{a.average})\n\n"
end


task :search_operators do
  require 'src/reproduction'
  #Populate many trees
  p=Population.new()
  
  #Pick a random tree
  randomReproducedIndividual = RandomPick(p)
  
  #Store the string representation of that tree
  printIndividual=randomReproducedIndividual.to_s
  
  #Print that string
  print "The random individual is: (#{printIndividual})\n"
end